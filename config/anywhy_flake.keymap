#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
/ {
    behaviors {
        ht_a: ht_a {
            compatible = "zmk,behavior-hold-tap";
            label = "HT_A";
            #binding-cells = <0>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            bindings = <&kp LGUI>, <&kp A>;
            hold-trigger-key-positions = <18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41>;
            hold-trigger-on-release;
        };
        ht_s: ht_s {
            compatible = "zmk,behavior-hold-tap";
            label = "HT_S";
            #binding-cells = <0>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            bindings = <&kp LALT>, <&kp S>;
            hold-trigger-key-positions = <18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41>;
            hold-trigger-on-release;
        };
        ht_d: ht_d {
            compatible = "zmk,behavior-hold-tap";
            label = "HT_D";
            #binding-cells = <0>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            bindings = <&kp LCTRL>, <&kp D>;
            hold-trigger-key-positions = <18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41>;
            hold-trigger-on-release;
        };
        ht_f: ht_f {
            compatible = "zmk,behavior-hold-tap";
            label = "HT_F";
            #binding-cells = <0>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            bindings = <&kp LSHIFT>, <&kp F>;
            hold-trigger-key-positions = <18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41>;
            hold-trigger-on-release;
        };
        ht_j: ht_j {
            compatible = "zmk,behavior-hold-tap";
            label = "HT_J";
            #binding-cells = <0>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            bindings = <&kp RSHIFT>, <&kp J>;
            hold-trigger-key-positions = <0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 36 37 38 39 40 41>;
            hold-trigger-on-release;
        };
        ht_k: ht_k {
            compatible = "zmk,behavior-hold-tap";
            label = "HT_K";
            #binding-cells = <0>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            bindings = <&kp RCTRL>, <&kp K>;
            hold-trigger-key-positions = <0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 36 37 38 39 40 41>;
            hold-trigger-on-release;
        };
        ht_l: ht_l {
            compatible = "zmk,behavior-hold-tap";
            label = "HT_L";
            #binding-cells = <0>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            bindings = <&kp RALT>, <&kp L>;
            hold-trigger-key-positions = <0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 36 37 38 39 40 41>;
            hold-trigger-on-release;
        };
        ht_sqt: ht_sqt {
            compatible = "zmk,behavior-hold-tap";
            label = "HT_SQT";
            #binding-cells = <0>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            bindings = <&kp RGUI>, <&kp SQT>;
            hold-trigger-key-positions = <0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 36 37 38 39 40 41>;
            hold-trigger-on-release;
        };
    };
    combos {
        compatible = "zmk,combos";
        bt_sel_3 {
            bindings = <&none>;
            key-positions = <42 30>;
        };
        bt_sel_4 {
            bindings = <&none>;
            key-positions = <30 18>;
        };
        enter_gaming {
            bindings = <&sl 0>;
            key-positions = <26 15 28>;
        };
        leave_gaming {
            bindings = <&sl 0>;
            key-positions = <31 20 33>;
        };
        grave {
            bindings = <&kp GRAVE>;
            key-positions = <13 25>;
        };
    };
    macros {
        bt_clr_0: bt_clr_0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 0 &bt BT_CLR>;
            label = "BT_CLR_0";
        };
        bt_clr_1: bt_clr_1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 1 &bt BT_CLR>;
            label = "BT_CLR_1";
        };
        bt_clr_2: bt_clr_2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 2 &bt BT_CLR>;
            label = "BT_CLR_2";
        };
        bt_clr_3: bt_clr_3 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 3 &bt BT_CLR>;
            label = "BT_CLR_3";
        };
        bt_clr_4: bt_clr_4 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 4 &bt BT_CLR>;
            label = "BT_CLR_4";
        };
    };
    keymap {
        compatible = "zmk,keymap";
        base {
            bindings = <
&kp ENTER &kp Q &kp W &kp E &kp R &kp T &kp Y &kp U &kp I &kp O &kp P &kp BACKSPACE
&kp TAB &ht_a &ht_s &ht_d &ht_f &kp G &kp H &ht_j &ht_k &ht_l &ht_sqt &kp EQUAL
&kp LEFT_SHIFT &kp Z &kp X &kp C &kp V &kp B &kp N &kp M &kp COMMA &kp DOT &kp FSLH &kp BACKSLASH
                &kp LCTRL &kp LALT &mt LEFT_META ESCAPE &lt 3 SPACE &lt 1 TAB &mo 2 &kp ENTER &kp LGUI &kp LALT &kp LCTRL
            >;
        };
        num {
            bindings = <
&none &trans &trans &trans &trans &trans &kp LEFT_BRACKET &kp N7 &kp N8 &kp N9 &kp RIGHT_BRACKET &none
&none &trans &trans &trans &trans &trans &kp SEMICOLON &kp N4 &kp N5 &kp N6 &kp EQUAL &none
&none &trans &trans &trans &trans &trans &kp GRAVE &kp N1 &kp N2 &kp N3 &kp BSLH &none
       &trans &trans &trans &trans &none &kp PERIOD &kp N0 &kp MINUS &trans &trans
            >;
        };
        fn {
            bindings = <
&none &kp F12 &kp F7 &kp F8 &kp F9 &soft_off &none &kp C_MUTE &kp C_VOL_DN &kp C_VOL_UP &kp C_BRI_UP &none
&none &kp F10 &kp F4 &kp F5 &kp F6 &kp CAPS &none &trans &trans &trans &trans &none
&none &kp F11 &kp F1 &kp F2 &kp F3 &studio_unlock &none &kp C_PP &kp C_PREV &kp C_NEXT &kp C_BRI_DN &none
       &trans &trans &trans &trans &none &none &trans &trans &trans &trans
            >;
        };
        nav {
            bindings = <
&trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans
&trans &trans &trans &trans &trans &trans &kp CAPSLOCK &kp LEFT_ARROW &kp DOWN &kp UP_ARROW &kp RIGHT_ARROW &trans
&trans &trans &trans &trans &trans &trans &kp INSERT &kp HOME &kp PAGE_DOWN &kp PAGE_UP &kp END &trans
        &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans
            >;
        };
    };
};
